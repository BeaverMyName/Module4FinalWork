// <auto-generated />
using System;
using DBAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBAccess.Migrations
{
    [DbContext(typeof(MusicContext))]
    [Migration("20211127205946_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBAccess.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1942, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "PaulMcC@gmail.com",
                            InstagramUrl = "www.instagram.com/paulmccartney",
                            Name = "Paul McCartney",
                            Phone = "+4382836323"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1963, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TillLindemann@gmail.com",
                            InstagramUrl = "www.instagram.com/till_lindemann_official",
                            Name = "Till Lendemann",
                            Phone = "+5843893993"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1986, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "LadyGaga@gmail.com",
                            InstagramUrl = "www.instagram.com/ladygaga",
                            Name = "Lady Gaga",
                            Phone = "+4347823742"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1972, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Eminem@gmail.com",
                            InstagramUrl = "www.instagram.com/eminem",
                            Name = "Eminem",
                            Phone = "+53457349587"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1988, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Adele@gmail.com",
                            InstagramUrl = "www.instagram.com/adele",
                            Name = "Adele",
                            Phone = "+42348789233"
                        });
                });

            modelBuilder.Entity("DBAccess.Models.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            SongId = 5
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            SongId = 4
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            SongId = 2
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            SongId = 1
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            SongId = 3
                        });
                });

            modelBuilder.Entity("DBAccess.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Hip hop"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Electronic"
                        });
                });

            modelBuilder.Entity("DBAccess.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 323,
                            GenreId = 1,
                            ReleaseDate = new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lose Yourself"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 308,
                            GenreId = 3,
                            ReleaseDate = new DateTime(2009, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bad Romance"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 366,
                            GenreId = 3,
                            ReleaseDate = new DateTime(2015, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hello"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 235,
                            GenreId = 2,
                            ReleaseDate = new DateTime(1997, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Du Hast"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 131,
                            GenreId = 2,
                            ReleaseDate = new DateTime(1966, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Eleanor Rigby"
                        });
                });

            modelBuilder.Entity("DBAccess.Models.ArtistSong", b =>
                {
                    b.HasOne("DBAccess.Models.Artist", "Artist")
                        .WithMany("ArtistSong")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBAccess.Models.Song", "Song")
                        .WithMany("ArtistSong")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("DBAccess.Models.Song", b =>
                {
                    b.HasOne("DBAccess.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DBAccess.Models.Artist", b =>
                {
                    b.Navigation("ArtistSong");
                });

            modelBuilder.Entity("DBAccess.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("DBAccess.Models.Song", b =>
                {
                    b.Navigation("ArtistSong");
                });
#pragma warning restore 612, 618
        }
    }
}
